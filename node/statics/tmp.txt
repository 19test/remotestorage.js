server-side:
- login button -> does browserid. if webfinger works ->
	- wallet -> does the wallets. occupies port 443
	- a session is registered with the assertion as the key, and some other meta-data like time and IP
	- if wallet has no oauth token, it's danced
if not:
	- choose hosted username.
	- browsermail -> reserves usernames. occupies ports 8000 and 25

- control panel:
	- view browsermail
	- log out
	- list sessions, kick out
	- cancel account

- node+redis storage
	- put,delete,get
	- storage control panel

- syncStorage:
	- don't encrypt in sessionStorage - it's useless anyway, and it's not possible when not logged in
	- queue pushes in order.
	- implement and document missing features.

- if http basic auth fails, oauth is danced again as well. encryption is not secret to the browsers. only to the storage. but there should be some new sort of secret for subsequent browser sessions.

every time you log a session out, the crypto key should flush. it should also flush the oauth key
